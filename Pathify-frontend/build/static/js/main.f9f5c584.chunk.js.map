{"version":3,"sources":["Components/Destinations.jsx","Components/PolylineOverlay.jsx","Components/Map.jsx","Components/Search.jsx","Components/App.jsx","App.js","serviceWorker.js","index.js"],"names":["Destinations","state","show","Paper","component","style","padding","paddingBottom","this","props","coords","length","marginTop","textAlign","width","fontSize","display","IconButton","color","aria-label","onClick","setState","float","marginRight","map","coord","index","key","height","className","Component","PolylineOverlay","ctx","isDragging","project","unproject","points","lineWidth","renderWhileDragging","clearRect","globalCompositeOperation","strokeStyle","beginPath","forEach","point","pixel","long","lat","lineTo","stroke","redraw","_redraw","bind","PureComponent","Map","viewport","latitude","longitude","zoom","upd","console","log","transitionDuration","transitionInterpolator","FlyToInterpolator","mapStyle","mapboxApiAccessToken","onViewportChange","zIndex","transform","LocationIQ","init","Search","coordsName","text","loading","rsp","path","upda","convert","address","search","then","response","concat","Number","lon","false","error","addLoc","includes","submit","axios","post","res","data","catch","clear","position","margin","InputBase","type","opacity","placeholder","inputProps","onChange","e","target","value","onKeyPress","preventDefault","Divider","orientation","marginLeft","Snackbar","fontFamily","fontWeight","anchorOrigin","vertical","horizontal","variant","open","SnackbarContent","backgroundColor","message","LinearProgress","action","autoHideDuration","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9f5c584.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\nexport class Destinations extends Component {\n    state={show:true}\n    render() {\n        return (\n            <Paper component=\"form\" style={{padding:'3px 20px 3px 20px', paddingBottom: this.props.coords.length? '33px':'3px', marginTop:'10px', textAlign:'left',width:'410px'}}>\n                <h4 style={{ fontSize:'15.5px',display:'inline-block'}}>Destination List</h4>\n                <IconButton color=\"primary\" aria-label=\"search\" onClick={()=>this.setState({show:!this.state.show})} style={{float:'right',marginRight:\"5px\", color:\"#0fa1f0\",display:'inline-block'}}>\n                   {this.state.show? <ExpandLessIcon />: <ExpandMoreIcon />}\n                </IconButton>\n            <div>\n\n\n                {this.state.show?this.props.coords.map((coord,index) => (\n                    <div key={index} style={{padding:'0px', height:'44px'}}>\n                        <span className=\"circle\"  style={{ fontSize:'14.5px'}}>{index+1}</span>\n                        <h5 style={{display:'inline-block', fontSize:'14.5px'}}>{coord}</h5>\n                    </div>\n                )): null}\n                </div>\n                </Paper>\n        )\n    }\n}\n\nexport default Destinations\n","import React, { PureComponent } from 'react'\nimport { CanvasOverlay } from 'react-map-gl'\n\nexport default class PolylineOverlay extends PureComponent {\n  _redraw ({ width, height, ctx, isDragging, project, unproject }) {\n    const { points, color = '#5479ff', lineWidth = 2.6, renderWhileDragging = true } = this.props\n    ctx.clearRect(0, 0, width, height)\n    ctx.globalCompositeOperation = 'lighter'\n\n    if ((renderWhileDragging || !isDragging) && points) {\n      ctx.lineWidth = lineWidth\n      ctx.strokeStyle = color\n      ctx.beginPath()\n      points.forEach(point => {\n        const pixel = project([point.long, point.lat])\n        ctx.lineTo(pixel[0], pixel[1])\n      })\n      ctx.stroke()\n    }\n  }\n\n  render () {\n    return <CanvasOverlay redraw={this._redraw.bind(this)} />\n  }\n}","import React, { Component } from 'react'\nimport ReactMapGL, {FlyToInterpolator} from 'react-map-gl';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport {Marker} from 'react-map-gl';\nimport PolylineOverlay from './PolylineOverlay'\n\nconst SIZE = 25\n\nexport class Map extends Component {\n    state= {\n        viewport:{\n            width: \"100%\",\n            height: \"100vh\",\n            latitude: 39.5501,\n            longitude: -105.7821,\n            zoom: 6,\n            upd: false  \n        }\n    };\n\n    componentWillReceiveProps(){\n        if (this.props.points.length && !this.state.upd){\n            console.log(this.props.points);\n\n            const viewport = {\n                ...this.state.viewport,\n                longitude: this.props.points[this.props.points.length-1].long,\n                latitude: this.props.points[this.props.points.length-1].lat,\n                zoom: 14,\n                transitionDuration: 5000,\n                transitionInterpolator: new FlyToInterpolator(),\n                upd: true\n            };\n            this.setState({viewport});\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <ReactMapGL\n                    {...this.state.viewport}\n                    // mapStyle={'mapbox://styles/antondilon/ck6f57y7g7irc1inwhihl51yp'}\n                    mapStyle={'mapbox://styles/antondilon/ck6f9tva40lhg1irzl0tbn3y9'}\n                    mapboxApiAccessToken={\"pk.eyJ1IjoiYW50b25kaWxvbiIsImEiOiJjazZmNHA1bWoxNHoyM29td2k1MjVncm16In0.k99zSrB13Geh7G_bU-GZzw\"}\n                    onViewportChange={(viewport) => this.setState({viewport})}\n                >\n                    {this.props.points.map((point, index) => (\n                        <Marker  longitude={point.long} latitude={point.lat} key={index} zIndex={10}>\n                            <LocationOnIcon style={{fontSize:'30px', transform: `translate(${-SIZE*1.1 / 2}px,${-SIZE}px)`, color:'red'}}/> \n                        </Marker>\n                    ))}\n\n                    <PolylineOverlay points={this.props.coords} zIndex={-2}/>\n                </ReactMapGL>\n            </div>\n        )\n    }\n}\n\nexport default Map\n","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport AddIcon from '@material-ui/icons/Add';\nimport LocationIQ from 'react-native-locationiq';\nimport Destinations from './Destinations'\nimport Map from './Map'\nimport axios from 'axios';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\nLocationIQ.init(\"dec43a4fbe212b\");\n\nexport class Search extends Component {\n    state={coords:[], coordsName:[], text:'',loading:false, rsp:false,path:[],upda:false}\n    \n    convert = (address) => { \n        LocationIQ.search(address).then(\n        response => {\n            this.setState({coords:this.state.coords.concat({lat: Number(response[0].lat), long:Number(response[0].lon)}), coordsName: this.state.coordsName.concat(address) }) ;\n            this.setState({false:!this.state.false})\n        },\n        error => {\n            console.error(error);\n        }\n        );\n    }\n\n    addLoc = () =>{\n        if(!this.state.coordsName.includes(this.state.text))\n            this.convert(this.state.text)\n    }\n\n    submit = () => {\n        axios.post('https://pathify.herokuapp.com/path',\n             this.state.coords\n        ).then((res) => \n            this.setState({path:res.data,loading:false,rsp:true}))\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    clear = () => {\n        this.setState({coords:[], coordsName:[], text:'',loading:false, rsp:false,path:[]})\n    }\n\n    render() {\n        return (\n            <div>\n            <div style={{width:'450px', position:'absolute', zIndex:1, margin:'30px'}}>\n            <Paper component=\"form\" >\n                <IconButton color=\"primary\" aria-label=\"search\" onClick={() =>this.addLoc()} style={{marginRight:\"5px\", color:\"#0fa1f0\"}}>\n                    <AddIcon />\n                </IconButton>\n                <InputBase\n                     type=\"text\"\n                    style={{width:'300px', opacity:1, fontSize:'16px'}}\n                    placeholder=\"Search Pathify\"\n                    inputProps={{ 'aria-label': 'Enter Points' }}\n                    onChange={(e) => this.setState({text:e.target.value})}\n                    onKeyPress={e => {\n                        if (e.key === 'Enter') {\n                          this.addLoc();\n                          e.preventDefault();\n                        }\n                      }}\n                />\n                \n                <IconButton color=\"primary\"  aria-label=\"directions\" style={{marginRight:\"5px\", color:'#38db24'}}>\n                    <DirectionsIcon onClick={() =>{\n                        this.setState({loading:true})\n                        this.submit()\n                    }}/>\n                </IconButton>\n\n                <Divider orientation=\"vertical\" style={{display:'inline-block', color:'black',height: '30px', margin:'-10px'}}/>\n\n                <IconButton aria-label=\"directions\" onClick={() =>this.clear()} style={{marginLeft:\"10px\", color:'red'}}>\n                    <CloseIcon/>\n                </IconButton>\n          \n                <Snackbar\n                style={{fontFamily:'Avenir, Nunito Sans, sans-serif', fontWeight:'900'}}\n                anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n                variant=\"error\"\n                open={this.state.loading}\n                >\n                    <SnackbarContent style={{backgroundColor:'white',fontFamily:'Avenir, Nunito Sans, sans-serif', fontWeight:'900', fontSize: 16}}\n                    message={<div ><h4 style={{display:'inline', color:'black'}}>Searching for Path, Please Wait</h4><LinearProgress variant=\"query\"/></div>}\n                    action={ <IconButton\n                        key=\"close\"\n                        aria-label=\"close\"\n                        ><CloseIcon style={{color:'black'}}/>\n                        </IconButton>}\n                    />       \n                </Snackbar>\n\n                <Snackbar\n                style={{fontFamily:'Avenir, Nunito Sans, sans-serif', fontWeight:'900'}}\n                anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}\n                variant=\"error\"\n                autoHideDuration={6000}\n                open={this.state.rsp}\n                >\n                <SnackbarContent style={{backgroundColor:'rgb(80, 209, 0)',fontFamily:'Avenir, Nunito Sans, sans-serif', fontWeight:'900', fontSize: 16}}\n                message=\"Success, Optimal Path Found!\"\n                action={ <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    onClick={() => this.setState({rsp:false})}\n                    ><CloseIcon style={{color:'white'}}/>\n                    </IconButton>}\n                />\n            </Snackbar>\n\n            </Paper>\n\n            {this.state.coordsName.length? <Destinations coords={this.state.coordsName}/>: null}\n\n            </div>\n                <Map coords={this.state.path} points={this.state.coords}/>\n            </div>\n        )\n    }\n}\n\nexport default Search\n","import React, { Component } from 'react'\nimport Search from './Search'\nimport './App.css'\n\nexport class App extends Component {\n    render() {\n\n        return (\n            <div>\n                <Search/>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport './App.css';\nimport HomePage from './Components/App'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}